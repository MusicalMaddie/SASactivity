import sys
import requests
import json
from assertpy.assertpy import assert_that
from config import BASE_URL
from json import dumps
from utils.printing import pretty_print
from config import USERNAME, PASSWORD

sys.path.append('/opt/homebrew/lib/python3.9/site-packages')
response_json = ''
token = ''


def func_response():
    response = requests.get(BASE_URL+'/login')
    return response


def test_check_api_is_active():
    global response_json
    response_json = func_response().json()
    pretty_print(response_json)
    assert_that(func_response().status_code).is_equal_to(200)


def test_successfully_login_to_api():
    payload = dumps({
        'email': USERNAME,
        'password': PASSWORD
    })
    headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
    }
    response = requests.post(url=BASE_URL+'/login', data=payload, headers=headers)
    global response_json
    response_json = response.json()
    y = json.loads(json.dumps(response_json))
    global token
    token = y["token"]
    pretty_print('Token generated by successful login: '+y["token"])
    pretty_print(response_json)
    assert_that(response.status_code).is_equal_to(200)
    assert_that(response_json).contains_key('token')


def test_verify_if_request_submitted_is_incomplete():
    login_response = requests.post(BASE_URL+'/login', data=USERNAME)
    login_json = login_response.json()
    pretty_print(login_json)
    assert_that(login_response.status_code).is_equal_to(400)

